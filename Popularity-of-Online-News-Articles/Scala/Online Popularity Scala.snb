{"metadata":{"id":"04205d8f-7af6-4095-b421-3b6639e44e2e","name":"Online Popularity Scala","user_save_timestamp":"1970-01-01T01:00:00.000Z","auto_save_timestamp":"1970-01-01T01:00:00.000Z","language_info":{"name":"scala","file_extension":"scala","codemirror_mode":"text/x-scala"},"trusted":true,"sparkNotebook":null,"customLocalRepo":null,"customRepos":null,"customDeps":null,"customImports":null,"customArgs":null,"customSparkConf":null,"customVars":null},"cells":[{"metadata":{"id":"346028430A85474687D099A00CC89FEF"},"cell_type":"markdown","source":"# Online News Popularity Prediction"},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"784DDB91DDFF43B88426414F47E09A96"},"cell_type":"code","source":"\n// Spark SQL\nimport org.apache.spark.sql.{SparkSession, Column}\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types.{StructField, IntegerType, DoubleType, StringType}\n\n// Spark ML\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.linalg.{Vectors, DenseVector}\nimport org.apache.spark.ml.feature.{StringIndexer, StandardScaler, VectorSlicer, VectorIndexer}\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.regression.{LinearRegression, DecisionTreeRegressor, RandomForestRegressionModel, RandomForestRegressor}\nimport org.apache.spark.ml.Transformer\nimport org.apache.spark.ml.tuning._\n\n\nval spark = SparkSession\n  .builder()\n  .appName(\"Spark Example\")\n  .getOrCreate()   \n\n// Import the implicits, unlike in core Spark the implicits are defined    \n// on the context.    \nimport spark.implicits._\n","outputs":[{"name":"stdout","output_type":"stream","text":"import org.apache.spark.sql.{SparkSession, Column}\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types.{StructField, IntegerType, DoubleType, StringType}\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.linalg.{Vectors, DenseVector}\nimport org.apache.spark.ml.feature.{StringIndexer, StandardScaler, VectorSlicer, VectorIndexer}\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.regression.{LinearRegression, DecisionTreeRegressor, RandomForestRegressionModel, RandomForestRegressor}\nimport org.apache.spark.ml.Transformer\nimport org.apache.spark.ml.tuning._\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@45a83b3e\nimport spark.implicits._\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":114,"time":"Took: 2.678s, at 2019-04-07 18:57"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"633F5D23FF714C3981F7932144C2439D"},"cell_type":"code","source":"\nval df = spark.read\n  .option(\"header\", true)\n  .option(\"inferschema\", true)\n  .csv(\"D:/Kaggle/Online News Popularity/OnlineNewsPopularity.csv\")","outputs":[{"name":"stdout","output_type":"stream","text":"df: org.apache.spark.sql.DataFrame = [url: string,  timedelta: double ... 59 more fields]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":67,"time":"Took: 1.429s, at 2019-04-07 17:32"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"presentation":{"tabs_state":"{\n  \"tab_id\": \"#tab2140145832-0\"\n}","pivot_chart_state":"{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"},"id":"52D6E70B03CE4E6DB4AA90DB782E2E43"},"cell_type":"code","source":"df","outputs":[{"name":"stdout","output_type":"stream","text":"res89: org.apache.spark.sql.DataFrame = [url: string,  timedelta: double ... 59 more fields]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon9bf0729a3342aeffd62562bec8a1f420&quot;,&quot;partitionIndexId&quot;:&quot;anon0303eb9b433835a01e1acb50fefd5300&quot;,&quot;numPartitions&quot;:1586,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;url&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; timedelta&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; n_tokens_title&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; n_tokens_content&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; n_unique_tokens&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; n_non_stop_words&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; n_non_stop_unique_tokens&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; num_hrefs&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; num_self_hrefs&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; num_imgs&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; num_videos&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; average_token_length&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; num_keywords&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; data_channel_is_lifestyle&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; data_channel_is_entertainment&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; data_channel_is_bus&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; data_channel_is_socmed&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; data_channel_is_tech&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; data_channel_is_world&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_min_min&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_max_min&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_avg_min&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_min_max&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_max_max&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_avg_max&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_min_avg&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_max_avg&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; kw_avg_avg&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; self_reference_min_shares&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; self_reference_max_shares&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; self_reference_avg_sharess&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; weekday_is_monday&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; weekday_is_tuesday&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; weekday_is_wednesday&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; weekday_is_thursday&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; weekday_is_friday&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; weekday_is_saturday&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; weekday_is_sunday&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; is_weekend&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; LDA_00&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; LDA_01&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; LDA_02&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; LDA_03&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; LDA_04&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; global_subjectivity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; global_sentiment_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; global_rate_positive_words&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; global_rate_negative_words&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; rate_positive_words&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; rate_negative_words&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; avg_positive_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; min_positive_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; max_positive_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; avg_negative_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; min_negative_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; max_negative_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; title_subjectivity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; title_sentiment_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; abs_title_subjectivity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; abs_title_sentiment_polarity&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot; shares&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"output_type":"execute_result","execution_count":31,"time":"Took: 2.333s, at 2019-04-07 16:33"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"presentation":{"tabs_state":"{\n  \"tab_id\": \"#tab1927657634-0\"\n}","pivot_chart_state":"{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"},"id":"B502488D7D404FBABFB23A6437CFB17F"},"cell_type":"code","source":"df.dtypes","outputs":[{"name":"stdout","output_type":"stream","text":"res82: Array[(String, String)] = Array((url,StringType), (\" timedelta\",DoubleType), (\" n_tokens_title\",DoubleType), (\" n_tokens_content\",DoubleType), (\" n_unique_tokens\",DoubleType), (\" n_non_stop_words\",DoubleType), (\" n_non_stop_unique_tokens\",DoubleType), (\" num_hrefs\",DoubleType), (\" num_self_hrefs\",DoubleType), (\" num_imgs\",DoubleType), (\" num_videos\",DoubleType), (\" average_token_length\",DoubleType), (\" num_keywords\",DoubleType), (\" data_channel_is_lifestyle\",DoubleType), (\" data_channel_is_entertainment\",DoubleType), (\" data_channel_is_bus\",DoubleType), (\" data_channel_is_socmed\",DoubleType), (\" data_channel_is_tech\",DoubleType), (\" data_channel_is_world\",DoubleType), (\" kw_min_min\",DoubleType), (\" kw_max_min\",DoubleType), (\" kw_avg_min\",DoubleType), (\" kw_min_max\",DoubleType), (..."},{"metadata":{},"data":{"text/html":"<div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon24645fa4df18d0c7e2c77efd342b002a&quot;,&quot;dataInit&quot;:[],&quot;genId&quot;:&quot;1927657634&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/tabs'], \n      function(playground, _magictabs) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magictabs,\n    \"o\": {}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <div>\n        <ul class=\"nav nav-tabs\" id=\"ul1927657634\"><li>\n              <a href=\"#tab1927657634-0\"><i class=\"fa fa-table\"/></a>\n            </li><li>\n              <a href=\"#tab1927657634-1\"><i class=\"fa fa-pie-chart\"/></a>\n            </li><li>\n              <a href=\"#tab1927657634-2\"><i class=\"fa fa-cubes\"/></a>\n            </li></ul>\n\n        <div class=\"tab-content\" id=\"tab1927657634\"><div class=\"tab-pane\" id=\"tab1927657634-0\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anona85d8c370916f82d248ded6e31727f99&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;url&quot;,&quot;_2&quot;:&quot;StringType&quot;},{&quot;_1&quot;:&quot; timedelta&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_tokens_title&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_tokens_content&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_unique_tokens&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_non_stop_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_non_stop_unique_tokens&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_hrefs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_self_hrefs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_imgs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_videos&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; average_token_length&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_keywords&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_lifestyle&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_entertainment&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_bus&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_socmed&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_tech&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_world&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_min_shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_max_shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_avg_sharess&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_monday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_tuesday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_wednesday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_thursday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_friday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_saturday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_sunday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; is_weekend&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_00&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_01&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_02&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_03&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_04&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_rate_positive_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_rate_negative_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; rate_positive_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; rate_negative_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; avg_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; min_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; max_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; avg_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; min_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; max_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; title_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; title_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; abs_title_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; abs_title_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;}],&quot;genId&quot;:&quot;1059514273&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/tableChart'], \n      function(playground, _magictableChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magictableChart,\n    \"o\": {\"headers\":[\"_1\",\"_2\"],\"width\":600,\"height\":400}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anona2066a06162bfb08cffbf8b9f9f57ef8&quot;,&quot;initialValue&quot;:&quot;61&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anonba9b8b56db910c381fa89e1aa6bd55c3&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div><div class=\"tab-pane\" id=\"tab1927657634-1\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon8654adbc189d70ba42e37665b7ba5cf2&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;url&quot;,&quot;_2&quot;:&quot;StringType&quot;},{&quot;_1&quot;:&quot; timedelta&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_tokens_title&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_tokens_content&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_unique_tokens&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_non_stop_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_non_stop_unique_tokens&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_hrefs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_self_hrefs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_imgs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_videos&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; average_token_length&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_keywords&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_lifestyle&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_entertainment&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_bus&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_socmed&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_tech&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_world&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_min_shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_max_shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_avg_sharess&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_monday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_tuesday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_wednesday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_thursday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_friday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_saturday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_sunday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; is_weekend&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_00&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_01&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_02&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_03&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_04&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_rate_positive_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_rate_negative_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; rate_positive_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; rate_negative_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; avg_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; min_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; max_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; avg_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; min_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; max_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; title_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; title_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; abs_title_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; abs_title_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;}],&quot;genId&quot;:&quot;1214824039&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/pieChart'], \n      function(playground, _magicpieChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicpieChart,\n    \"o\": {\"series\":\"_1\",\"p\":\"_2\",\"width\":600,\"height\":400}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anondbd8659e3d1968ddd4513b2bab59eea8&quot;,&quot;initialValue&quot;:&quot;61&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon38d2c4b39c355dfa1dd4e1346d99031d&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div><div class=\"tab-pane\" id=\"tab1927657634-2\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon0f58b9ebb1aa38cda135a88885e148e4&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;url&quot;,&quot;_2&quot;:&quot;StringType&quot;},{&quot;_1&quot;:&quot; timedelta&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_tokens_title&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_tokens_content&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_unique_tokens&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_non_stop_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; n_non_stop_unique_tokens&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_hrefs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_self_hrefs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_imgs&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_videos&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; average_token_length&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; num_keywords&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_lifestyle&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_entertainment&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_bus&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_socmed&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_tech&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; data_channel_is_world&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_min&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_max&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_min_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_max_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; kw_avg_avg&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_min_shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_max_shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; self_reference_avg_sharess&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_monday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_tuesday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_wednesday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_thursday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_friday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_saturday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; weekday_is_sunday&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; is_weekend&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_00&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_01&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_02&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_03&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; LDA_04&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_rate_positive_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; global_rate_negative_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; rate_positive_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; rate_negative_words&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; avg_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; min_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; max_positive_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; avg_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; min_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; max_negative_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; title_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; title_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; abs_title_subjectivity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; abs_title_sentiment_polarity&quot;,&quot;_2&quot;:&quot;DoubleType&quot;},{&quot;_1&quot;:&quot; shares&quot;,&quot;_2&quot;:&quot;DoubleType&quot;}],&quot;genId&quot;:&quot;1969925495&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/pivotChart'], \n      function(playground, _magicpivotChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicpivotChart,\n    \"o\": {\"width\":600,\"height\":400,\"derivedAttributes\":{},\"extraOptions\":{}}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon76ef12b6cdb2556670b9eb04c6a0c77f&quot;,&quot;initialValue&quot;:&quot;61&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anonbc9927b0a88884b7a4e83d541eb4e6d1&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div></div>\n      </div>\n    </div></div>"},"output_type":"execute_result","execution_count":27,"time":"Took: 3.345s, at 2019-04-07 16:29"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"BF038F29B9164B709177FDC46AF06BB4"},"cell_type":"code","source":"df.select(\"abs_totle_sentiment_polarity\")","outputs":[{"name":"stdout","output_type":"stream","text":"org.apache.spark.sql.AnalysisException: cannot resolve '`abs_totle_sentiment_polarity`' given input columns: [ title_sentiment_polarity,  weekday_is_saturday,  self_reference_avg_sharess,  data_channel_is_socmed,  kw_max_max,  kw_avg_min,  data_channel_is_lifestyle,  min_negative_polarity,  n_non_stop_unique_tokens,  self_reference_min_shares,  LDA_01,  kw_max_avg,  weekday_is_monday,  is_weekend,  rate_negative_words,  global_rate_positive_words,  avg_negative_polarity,  min_positive_polarity,  timedelta,  rate_positive_words,  abs_title_subjectivity,  weekday_is_thursday,  n_tokens_content,  weekday_is_tuesday,  title_subjectivity,  num_imgs,  weekday_is_wednesday,  LDA_00,  global_sentiment_polarity,  global_subjectivity,  num_keywords,  num_videos,  average_token_length,  weekday_is_friday,  weekday_is_sunday,  kw_max_min,  kw_avg_avg,  LDA_04,  LDA_03,  num_self_hrefs,  data_channel_is_tech,  data_channel_is_bus,  shares,  avg_positive_polarity,  data_channel_is_entertainment,  n_tokens_title,  num_hrefs,  max_negative_polarity,  global_rate_negative_words,  kw_avg_max,  data_channel_is_world,  kw_min_min,  self_reference_max_shares,  LDA_02,  n_unique_tokens,  kw_min_avg,  n_non_stop_words, url,  max_positive_polarity,  abs_title_sentiment_polarity,  kw_min_max];;\n'Project ['abs_totle_sentiment_polarity]\n+- Relation[url#13964, timedelta#13965, n_tokens_title#13966, n_tokens_content#13967, n_unique_tokens#13968, n_non_stop_words#13969, n_non_stop_unique_tokens#13970, num_hrefs#13971, num_self_hrefs#13972, num_imgs#13973, num_videos#13974, average_token_length#13975, num_keywords#13976, data_channel_is_lifestyle#13977, data_channel_is_entertainment#13978, data_channel_is_bus#13979, data_channel_is_socmed#13980, data_channel_is_tech#13981, data_channel_is_world#13982, kw_min_min#13983, kw_max_min#13984, kw_avg_min#13985, kw_min_max#13986, kw_max_max#13987,... 37 more fields] csv\n\n\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:88)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:288)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:279)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:289)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:293)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:244)\n\tat scala.collection.AbstractTraversable.map(Traversable.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:293)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$6.apply(QueryPlan.scala:298)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:298)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:78)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:78)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:91)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:52)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:67)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:2888)\n\tat org.apache.spark.sql.Dataset.select(Dataset.scala:1154)\n\tat org.apache.spark.sql.Dataset.select(Dataset.scala:1172)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:113)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:120)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:122)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:124)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:126)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:128)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:130)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:132)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:134)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:136)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:138)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:140)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:142)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:144)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:146)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:148)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:150)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:152)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:154)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:156)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:158)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:160)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:162)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:164)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:166)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:168)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:170)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:172)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:174)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:176)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:178)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:180)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:182)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:184)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:186)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:188)\n\tat $iwC$$iwC$$iwC$$iwC.<init>(<console>:190)\n\tat $iwC$$iwC$$iwC.<init>(<console>:192)\n\tat $iwC$$iwC.<init>(<console>:194)\n\tat $iwC.<init>(<console>:196)\n\tat <init>(<console>:198)\n\tat .<init>(<console>:202)\n\tat .<clinit>(<console>)\n\tat .<init>(<console>:7)\n\tat .<clinit>(<console>)\n\tat $print(<console>)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.spark.repl.SparkIMain$ReadEvalPrint.call(SparkIMain.scala:1046)\n\tat org.apache.spark.repl.SparkIMain$Request.loadAndRun(SparkIMain.scala:1327)\n\tat org.apache.spark.repl.SparkIMain.loadAndRunReq$1(SparkIMain.scala:822)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:853)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:801)\n\tat notebook.kernel.Repl$$anonfun$6.apply(Repl.scala:202)\n\tat notebook.kernel.Repl$$anonfun$6.apply(Repl.scala:202)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)\n\tat scala.Console$.withOut(Console.scala:126)\n\tat notebook.kernel.Repl.evaluate(Repl.scala:201)\n\tat notebook.client.ReplCalculator$$anonfun$10$$anon$1$$anonfun$18.replEvaluate$1(ReplCalculator.scala:217)\n\tat notebook.client.ReplCalculator$$anonfun$10$$anon$1$$anonfun$18.apply(ReplCalculator.scala:230)\n\tat notebook.client.ReplCalculator$$anonfun$10$$anon$1$$anonfun$18.apply(ReplCalculator.scala:211)\n\tat scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\n\tat scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:397)\n\tat scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\n\tat scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\n\tat scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\n\tat scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\n\n"}]},{"metadata":{"id":"1459B1172C6E4DDA8E0C0F578317B9A5"},"cell_type":"markdown","source":"# Exploratory Data Analysis"},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"presentation":{"tabs_state":"{\n  \"tab_id\": \"#tab264097444-0\"\n}","pivot_chart_state":"{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"},"id":"E21E11A6E3F140D68FB619C0CE3E41CD"},"cell_type":"code","source":"var newDf = df\n  for(col <- df.columns){\n    newDf = newDf.withColumnRenamed(col, col.replaceAll(\"\\\\s\", \"\"))\n  }\n\nval fields = newDf.schema.fields.collect {case StructField(name, DoubleType, _, _) => name }\nval correlations = newDf.select(fields.map(corr(_, \"shares\")): _*).first.toSeq\n\nfields zip correlations","outputs":[{"name":"stdout","output_type":"stream","text":"newDf: org.apache.spark.sql.DataFrame = [url: string, timedelta: double ... 59 more fields]\nfields: Array[String] = Array(timedelta, n_tokens_title, n_tokens_content, n_unique_tokens, n_non_stop_words, n_non_stop_unique_tokens, num_hrefs, num_self_hrefs, num_imgs, num_videos, average_token_length, num_keywords, data_channel_is_lifestyle, data_channel_is_entertainment, data_channel_is_bus, data_channel_is_socmed, data_channel_is_tech, data_channel_is_world, kw_min_min, kw_max_min, kw_avg_min, kw_min_max, kw_max_max, kw_avg_max, kw_min_avg, kw_max_avg, kw_avg_avg, self_reference_min_shares, self_reference_max_shares, self_reference_avg_sharess, weekday_is_monday, weekday_is_tuesday, weekday_is_wednesday, weekday_is_thursday, weekday_is_friday, weekday_is_saturday, weekday_is_sunday, is_we..."},{"metadata":{},"data":{"text/html":"<div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon296254a119ee0b2466640ff07719a052&quot;,&quot;dataInit&quot;:[],&quot;genId&quot;:&quot;264097444&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/tabs'], \n      function(playground, _magictabs) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magictabs,\n    \"o\": {}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <div>\n        <ul class=\"nav nav-tabs\" id=\"ul264097444\"><li>\n              <a href=\"#tab264097444-0\"><i class=\"fa fa-table\"/></a>\n            </li><li>\n              <a href=\"#tab264097444-1\"><i class=\"fa fa-bar-chart\"/></a>\n            </li><li>\n              <a href=\"#tab264097444-2\"><i class=\"fa fa-pie-chart\"/></a>\n            </li><li>\n              <a href=\"#tab264097444-3\"><i class=\"fa fa-cubes\"/></a>\n            </li></ul>\n\n        <div class=\"tab-content\" id=\"tab264097444\"><div class=\"tab-pane\" id=\"tab264097444-0\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anonb3dd2abe65d43d74c795b26a22d8bae5&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;timedelta&quot;,&quot;_2&quot;:0.00866228771126269},{&quot;_1&quot;:&quot;n_tokens_title&quot;,&quot;_2&quot;:0.008783118841818711},{&quot;_1&quot;:&quot;n_tokens_content&quot;,&quot;_2&quot;:0.002458984345090766},{&quot;_1&quot;:&quot;n_unique_tokens&quot;,&quot;_2&quot;:0.0008063456613076702},{&quot;_1&quot;:&quot;n_non_stop_words&quot;,&quot;_2&quot;:0.00044294161730839177},{&quot;_1&quot;:&quot;n_non_stop_unique_tokens&quot;,&quot;_2&quot;:0.00011417193781092019},{&quot;_1&quot;:&quot;num_hrefs&quot;,&quot;_2&quot;:0.045404008405927905},{&quot;_1&quot;:&quot;num_self_hrefs&quot;,&quot;_2&quot;:-0.0019004033728370468},{&quot;_1&quot;:&quot;num_imgs&quot;,&quot;_2&quot;:0.03938759784762866},{&quot;_1&quot;:&quot;num_videos&quot;,&quot;_2&quot;:0.023936069530131016},{&quot;_1&quot;:&quot;average_token_length&quot;,&quot;_2&quot;:-0.022007298061938744},{&quot;_1&quot;:&quot;num_keywords&quot;,&quot;_2&quot;:0.02181822715187529},{&quot;_1&quot;:&quot;data_channel_is_lifestyle&quot;,&quot;_2&quot;:0.005831267306546861},{&quot;_1&quot;:&quot;data_channel_is_entertainment&quot;,&quot;_2&quot;:-0.017006198429558278},{&quot;_1&quot;:&quot;data_channel_is_bus&quot;,&quot;_2&quot;:-0.012376166187935972},{&quot;_1&quot;:&quot;data_channel_is_socmed&quot;,&quot;_2&quot;:0.005021216306495152},{&quot;_1&quot;:&quot;data_channel_is_tech&quot;,&quot;_2&quot;:-0.013252874428024518},{&quot;_1&quot;:&quot;data_channel_is_world&quot;,&quot;_2&quot;:-0.04949730893119859},{&quot;_1&quot;:&quot;kw_min_min&quot;,&quot;_2&quot;:-0.0010509877309307321},{&quot;_1&quot;:&quot;kw_max_min&quot;,&quot;_2&quot;:0.03011393667092828},{&quot;_1&quot;:&quot;kw_avg_min&quot;,&quot;_2&quot;:0.030405547415685658},{&quot;_1&quot;:&quot;kw_min_max&quot;,&quot;_2&quot;:0.0039014319770320376},{&quot;_1&quot;:&quot;kw_max_max&quot;,&quot;_2&quot;:0.007862569278241992},{&quot;_1&quot;:&quot;kw_avg_max&quot;,&quot;_2&quot;:0.044685844808570165},{&quot;_1&quot;:&quot;kw_min_avg&quot;,&quot;_2&quot;:0.03955069447964222},{&quot;_1&quot;:&quot;kw_max_avg&quot;,&quot;_2&quot;:0.06430586384745439},{&quot;_1&quot;:&quot;kw_avg_avg&quot;,&quot;_2&quot;:0.1104128627095444},{&quot;_1&quot;:&quot;self_reference_min_shares&quot;,&quot;_2&quot;:0.055957575110843955},{&quot;_1&quot;:&quot;self_reference_max_shares&quot;,&quot;_2&quot;:0.04711522330980049},{&quot;_1&quot;:&quot;self_reference_avg_sharess&quot;,&quot;_2&quot;:0.057788897391043766},{&quot;_1&quot;:&quot;weekday_is_monday&quot;,&quot;_2&quot;:0.009726435058827806},{&quot;_1&quot;:&quot;weekday_is_tuesday&quot;,&quot;_2&quot;:-0.007940651946220886},{&quot;_1&quot;:&quot;weekday_is_wednesday&quot;,&quot;_2&quot;:-0.003800671899536164},{&quot;_1&quot;:&quot;weekday_is_thursday&quot;,&quot;_2&quot;:-0.008833243677374527},{&quot;_1&quot;:&quot;weekday_is_friday&quot;,&quot;_2&quot;:-0.0038843499366703056},{&quot;_1&quot;:&quot;weekday_is_saturday&quot;,&quot;_2&quot;:0.015082249374438693},{&quot;_1&quot;:&quot;weekday_is_sunday&quot;,&quot;_2&quot;:0.008229538740752355},{&quot;_1&quot;:&quot;is_weekend&quot;,&quot;_2&quot;:0.016958185255365188},{&quot;_1&quot;:&quot;LDA_00&quot;,&quot;_2&quot;:-0.0037930631414760095},{&quot;_1&quot;:&quot;LDA_01&quot;,&quot;_2&quot;:-0.010182873758371945},{&quot;_1&quot;:&quot;LDA_02&quot;,&quot;_2&quot;:-0.05916272983775859},{&quot;_1&quot;:&quot;LDA_03&quot;,&quot;_2&quot;:0.08377149200458561},{&quot;_1&quot;:&quot;LDA_04&quot;,&quot;_2&quot;:-0.016621938194680233},{&quot;_1&quot;:&quot;global_subjectivity&quot;,&quot;_2&quot;:0.031604062199554396},{&quot;_1&quot;:&quot;global_sentiment_polarity&quot;,&quot;_2&quot;:0.004162929062277241},{&quot;_1&quot;:&quot;global_rate_positive_words&quot;,&quot;_2&quot;:0.0005432341490311217},{&quot;_1&quot;:&quot;global_rate_negative_words&quot;,&quot;_2&quot;:0.006615173122292261},{&quot;_1&quot;:&quot;rate_positive_words&quot;,&quot;_2&quot;:-0.013241304213399044},{&quot;_1&quot;:&quot;rate_negative_words&quot;,&quot;_2&quot;:-0.005183138309307638},{&quot;_1&quot;:&quot;avg_positive_polarity&quot;,&quot;_2&quot;:0.012142198867957546},{&quot;_1&quot;:&quot;min_positive_polarity&quot;,&quot;_2&quot;:-0.000040095261213634024},{&quot;_1&quot;:&quot;max_positive_polarity&quot;,&quot;_2&quot;:0.010067794396580248},{&quot;_1&quot;:&quot;avg_negative_polarity&quot;,&quot;_2&quot;:-0.03202890859561179},{&quot;_1&quot;:&quot;min_negative_polarity&quot;,&quot;_2&quot;:-0.01929737518477992},{&quot;_1&quot;:&quot;max_negative_polarity&quot;,&quot;_2&quot;:-0.019300211388182748},{&quot;_1&quot;:&quot;title_subjectivity&quot;,&quot;_2&quot;:0.021966682303943975},{&quot;_1&quot;:&quot;title_sentiment_polarity&quot;,&quot;_2&quot;:0.012771873141514529},{&quot;_1&quot;:&quot;abs_title_subjectivity&quot;,&quot;_2&quot;:0.0014809979007599989},{&quot;_1&quot;:&quot;abs_title_sentiment_polarity&quot;,&quot;_2&quot;:0.027135230985338283},{&quot;_1&quot;:&quot;shares&quot;,&quot;_2&quot;:1.0}],&quot;genId&quot;:&quot;2133097363&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/tableChart'], \n      function(playground, _magictableChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magictableChart,\n    \"o\": {\"headers\":[\"_1\",\"_2\"],\"width\":600,\"height\":400}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon50d09acd10845d287d334bdcd8d81dfc&quot;,&quot;initialValue&quot;:&quot;60&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon3f4bf4305c9f1079028ed65a64167fc0&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div><div class=\"tab-pane\" id=\"tab264097444-1\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon1991ea2e59f4ec2e79dfc84bf838961d&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;timedelta&quot;,&quot;_2&quot;:0.00866228771126269},{&quot;_1&quot;:&quot;n_tokens_title&quot;,&quot;_2&quot;:0.008783118841818711},{&quot;_1&quot;:&quot;n_tokens_content&quot;,&quot;_2&quot;:0.002458984345090766},{&quot;_1&quot;:&quot;n_unique_tokens&quot;,&quot;_2&quot;:0.0008063456613076702},{&quot;_1&quot;:&quot;n_non_stop_words&quot;,&quot;_2&quot;:0.00044294161730839177},{&quot;_1&quot;:&quot;n_non_stop_unique_tokens&quot;,&quot;_2&quot;:0.00011417193781092019},{&quot;_1&quot;:&quot;num_hrefs&quot;,&quot;_2&quot;:0.045404008405927905},{&quot;_1&quot;:&quot;num_self_hrefs&quot;,&quot;_2&quot;:-0.0019004033728370468},{&quot;_1&quot;:&quot;num_imgs&quot;,&quot;_2&quot;:0.03938759784762866},{&quot;_1&quot;:&quot;num_videos&quot;,&quot;_2&quot;:0.023936069530131016},{&quot;_1&quot;:&quot;average_token_length&quot;,&quot;_2&quot;:-0.022007298061938744},{&quot;_1&quot;:&quot;num_keywords&quot;,&quot;_2&quot;:0.02181822715187529},{&quot;_1&quot;:&quot;data_channel_is_lifestyle&quot;,&quot;_2&quot;:0.005831267306546861},{&quot;_1&quot;:&quot;data_channel_is_entertainment&quot;,&quot;_2&quot;:-0.017006198429558278},{&quot;_1&quot;:&quot;data_channel_is_bus&quot;,&quot;_2&quot;:-0.012376166187935972},{&quot;_1&quot;:&quot;data_channel_is_socmed&quot;,&quot;_2&quot;:0.005021216306495152},{&quot;_1&quot;:&quot;data_channel_is_tech&quot;,&quot;_2&quot;:-0.013252874428024518},{&quot;_1&quot;:&quot;data_channel_is_world&quot;,&quot;_2&quot;:-0.04949730893119859},{&quot;_1&quot;:&quot;kw_min_min&quot;,&quot;_2&quot;:-0.0010509877309307321},{&quot;_1&quot;:&quot;kw_max_min&quot;,&quot;_2&quot;:0.03011393667092828},{&quot;_1&quot;:&quot;kw_avg_min&quot;,&quot;_2&quot;:0.030405547415685658},{&quot;_1&quot;:&quot;kw_min_max&quot;,&quot;_2&quot;:0.0039014319770320376},{&quot;_1&quot;:&quot;kw_max_max&quot;,&quot;_2&quot;:0.007862569278241992},{&quot;_1&quot;:&quot;kw_avg_max&quot;,&quot;_2&quot;:0.044685844808570165},{&quot;_1&quot;:&quot;kw_min_avg&quot;,&quot;_2&quot;:0.03955069447964222},{&quot;_1&quot;:&quot;kw_max_avg&quot;,&quot;_2&quot;:0.06430586384745439},{&quot;_1&quot;:&quot;kw_avg_avg&quot;,&quot;_2&quot;:0.1104128627095444},{&quot;_1&quot;:&quot;self_reference_min_shares&quot;,&quot;_2&quot;:0.055957575110843955},{&quot;_1&quot;:&quot;self_reference_max_shares&quot;,&quot;_2&quot;:0.04711522330980049},{&quot;_1&quot;:&quot;self_reference_avg_sharess&quot;,&quot;_2&quot;:0.057788897391043766},{&quot;_1&quot;:&quot;weekday_is_monday&quot;,&quot;_2&quot;:0.009726435058827806},{&quot;_1&quot;:&quot;weekday_is_tuesday&quot;,&quot;_2&quot;:-0.007940651946220886},{&quot;_1&quot;:&quot;weekday_is_wednesday&quot;,&quot;_2&quot;:-0.003800671899536164},{&quot;_1&quot;:&quot;weekday_is_thursday&quot;,&quot;_2&quot;:-0.008833243677374527},{&quot;_1&quot;:&quot;weekday_is_friday&quot;,&quot;_2&quot;:-0.0038843499366703056},{&quot;_1&quot;:&quot;weekday_is_saturday&quot;,&quot;_2&quot;:0.015082249374438693},{&quot;_1&quot;:&quot;weekday_is_sunday&quot;,&quot;_2&quot;:0.008229538740752355},{&quot;_1&quot;:&quot;is_weekend&quot;,&quot;_2&quot;:0.016958185255365188},{&quot;_1&quot;:&quot;LDA_00&quot;,&quot;_2&quot;:-0.0037930631414760095},{&quot;_1&quot;:&quot;LDA_01&quot;,&quot;_2&quot;:-0.010182873758371945},{&quot;_1&quot;:&quot;LDA_02&quot;,&quot;_2&quot;:-0.05916272983775859},{&quot;_1&quot;:&quot;LDA_03&quot;,&quot;_2&quot;:0.08377149200458561},{&quot;_1&quot;:&quot;LDA_04&quot;,&quot;_2&quot;:-0.016621938194680233},{&quot;_1&quot;:&quot;global_subjectivity&quot;,&quot;_2&quot;:0.031604062199554396},{&quot;_1&quot;:&quot;global_sentiment_polarity&quot;,&quot;_2&quot;:0.004162929062277241},{&quot;_1&quot;:&quot;global_rate_positive_words&quot;,&quot;_2&quot;:0.0005432341490311217},{&quot;_1&quot;:&quot;global_rate_negative_words&quot;,&quot;_2&quot;:0.006615173122292261},{&quot;_1&quot;:&quot;rate_positive_words&quot;,&quot;_2&quot;:-0.013241304213399044},{&quot;_1&quot;:&quot;rate_negative_words&quot;,&quot;_2&quot;:-0.005183138309307638},{&quot;_1&quot;:&quot;avg_positive_polarity&quot;,&quot;_2&quot;:0.012142198867957546},{&quot;_1&quot;:&quot;min_positive_polarity&quot;,&quot;_2&quot;:-0.000040095261213634024},{&quot;_1&quot;:&quot;max_positive_polarity&quot;,&quot;_2&quot;:0.010067794396580248},{&quot;_1&quot;:&quot;avg_negative_polarity&quot;,&quot;_2&quot;:-0.03202890859561179},{&quot;_1&quot;:&quot;min_negative_polarity&quot;,&quot;_2&quot;:-0.01929737518477992},{&quot;_1&quot;:&quot;max_negative_polarity&quot;,&quot;_2&quot;:-0.019300211388182748},{&quot;_1&quot;:&quot;title_subjectivity&quot;,&quot;_2&quot;:0.021966682303943975},{&quot;_1&quot;:&quot;title_sentiment_polarity&quot;,&quot;_2&quot;:0.012771873141514529},{&quot;_1&quot;:&quot;abs_title_subjectivity&quot;,&quot;_2&quot;:0.0014809979007599989},{&quot;_1&quot;:&quot;abs_title_sentiment_polarity&quot;,&quot;_2&quot;:0.027135230985338283},{&quot;_1&quot;:&quot;shares&quot;,&quot;_2&quot;:1.0}],&quot;genId&quot;:&quot;1572104199&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/barChart'], \n      function(playground, _magicbarChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicbarChart,\n    \"o\": {\"x\":\"_1\",\"y\":\"_2\",\"width\":600,\"height\":400}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon9e2abd4082f65b748b06f67c34d29748&quot;,&quot;initialValue&quot;:&quot;60&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon211c02693e107cbf751e9d3e23b98f9f&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div><div class=\"tab-pane\" id=\"tab264097444-2\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anonf63052c8ac3abc70c0a05d83b2cb54f3&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;timedelta&quot;,&quot;_2&quot;:0.00866228771126269},{&quot;_1&quot;:&quot;n_tokens_title&quot;,&quot;_2&quot;:0.008783118841818711},{&quot;_1&quot;:&quot;n_tokens_content&quot;,&quot;_2&quot;:0.002458984345090766},{&quot;_1&quot;:&quot;n_unique_tokens&quot;,&quot;_2&quot;:0.0008063456613076702},{&quot;_1&quot;:&quot;n_non_stop_words&quot;,&quot;_2&quot;:0.00044294161730839177},{&quot;_1&quot;:&quot;n_non_stop_unique_tokens&quot;,&quot;_2&quot;:0.00011417193781092019},{&quot;_1&quot;:&quot;num_hrefs&quot;,&quot;_2&quot;:0.045404008405927905},{&quot;_1&quot;:&quot;num_self_hrefs&quot;,&quot;_2&quot;:-0.0019004033728370468},{&quot;_1&quot;:&quot;num_imgs&quot;,&quot;_2&quot;:0.03938759784762866},{&quot;_1&quot;:&quot;num_videos&quot;,&quot;_2&quot;:0.023936069530131016},{&quot;_1&quot;:&quot;average_token_length&quot;,&quot;_2&quot;:-0.022007298061938744},{&quot;_1&quot;:&quot;num_keywords&quot;,&quot;_2&quot;:0.02181822715187529},{&quot;_1&quot;:&quot;data_channel_is_lifestyle&quot;,&quot;_2&quot;:0.005831267306546861},{&quot;_1&quot;:&quot;data_channel_is_entertainment&quot;,&quot;_2&quot;:-0.017006198429558278},{&quot;_1&quot;:&quot;data_channel_is_bus&quot;,&quot;_2&quot;:-0.012376166187935972},{&quot;_1&quot;:&quot;data_channel_is_socmed&quot;,&quot;_2&quot;:0.005021216306495152},{&quot;_1&quot;:&quot;data_channel_is_tech&quot;,&quot;_2&quot;:-0.013252874428024518},{&quot;_1&quot;:&quot;data_channel_is_world&quot;,&quot;_2&quot;:-0.04949730893119859},{&quot;_1&quot;:&quot;kw_min_min&quot;,&quot;_2&quot;:-0.0010509877309307321},{&quot;_1&quot;:&quot;kw_max_min&quot;,&quot;_2&quot;:0.03011393667092828},{&quot;_1&quot;:&quot;kw_avg_min&quot;,&quot;_2&quot;:0.030405547415685658},{&quot;_1&quot;:&quot;kw_min_max&quot;,&quot;_2&quot;:0.0039014319770320376},{&quot;_1&quot;:&quot;kw_max_max&quot;,&quot;_2&quot;:0.007862569278241992},{&quot;_1&quot;:&quot;kw_avg_max&quot;,&quot;_2&quot;:0.044685844808570165},{&quot;_1&quot;:&quot;kw_min_avg&quot;,&quot;_2&quot;:0.03955069447964222},{&quot;_1&quot;:&quot;kw_max_avg&quot;,&quot;_2&quot;:0.06430586384745439},{&quot;_1&quot;:&quot;kw_avg_avg&quot;,&quot;_2&quot;:0.1104128627095444},{&quot;_1&quot;:&quot;self_reference_min_shares&quot;,&quot;_2&quot;:0.055957575110843955},{&quot;_1&quot;:&quot;self_reference_max_shares&quot;,&quot;_2&quot;:0.04711522330980049},{&quot;_1&quot;:&quot;self_reference_avg_sharess&quot;,&quot;_2&quot;:0.057788897391043766},{&quot;_1&quot;:&quot;weekday_is_monday&quot;,&quot;_2&quot;:0.009726435058827806},{&quot;_1&quot;:&quot;weekday_is_tuesday&quot;,&quot;_2&quot;:-0.007940651946220886},{&quot;_1&quot;:&quot;weekday_is_wednesday&quot;,&quot;_2&quot;:-0.003800671899536164},{&quot;_1&quot;:&quot;weekday_is_thursday&quot;,&quot;_2&quot;:-0.008833243677374527},{&quot;_1&quot;:&quot;weekday_is_friday&quot;,&quot;_2&quot;:-0.0038843499366703056},{&quot;_1&quot;:&quot;weekday_is_saturday&quot;,&quot;_2&quot;:0.015082249374438693},{&quot;_1&quot;:&quot;weekday_is_sunday&quot;,&quot;_2&quot;:0.008229538740752355},{&quot;_1&quot;:&quot;is_weekend&quot;,&quot;_2&quot;:0.016958185255365188},{&quot;_1&quot;:&quot;LDA_00&quot;,&quot;_2&quot;:-0.0037930631414760095},{&quot;_1&quot;:&quot;LDA_01&quot;,&quot;_2&quot;:-0.010182873758371945},{&quot;_1&quot;:&quot;LDA_02&quot;,&quot;_2&quot;:-0.05916272983775859},{&quot;_1&quot;:&quot;LDA_03&quot;,&quot;_2&quot;:0.08377149200458561},{&quot;_1&quot;:&quot;LDA_04&quot;,&quot;_2&quot;:-0.016621938194680233},{&quot;_1&quot;:&quot;global_subjectivity&quot;,&quot;_2&quot;:0.031604062199554396},{&quot;_1&quot;:&quot;global_sentiment_polarity&quot;,&quot;_2&quot;:0.004162929062277241},{&quot;_1&quot;:&quot;global_rate_positive_words&quot;,&quot;_2&quot;:0.0005432341490311217},{&quot;_1&quot;:&quot;global_rate_negative_words&quot;,&quot;_2&quot;:0.006615173122292261},{&quot;_1&quot;:&quot;rate_positive_words&quot;,&quot;_2&quot;:-0.013241304213399044},{&quot;_1&quot;:&quot;rate_negative_words&quot;,&quot;_2&quot;:-0.005183138309307638},{&quot;_1&quot;:&quot;avg_positive_polarity&quot;,&quot;_2&quot;:0.012142198867957546},{&quot;_1&quot;:&quot;min_positive_polarity&quot;,&quot;_2&quot;:-0.000040095261213634024},{&quot;_1&quot;:&quot;max_positive_polarity&quot;,&quot;_2&quot;:0.010067794396580248},{&quot;_1&quot;:&quot;avg_negative_polarity&quot;,&quot;_2&quot;:-0.03202890859561179},{&quot;_1&quot;:&quot;min_negative_polarity&quot;,&quot;_2&quot;:-0.01929737518477992},{&quot;_1&quot;:&quot;max_negative_polarity&quot;,&quot;_2&quot;:-0.019300211388182748},{&quot;_1&quot;:&quot;title_subjectivity&quot;,&quot;_2&quot;:0.021966682303943975},{&quot;_1&quot;:&quot;title_sentiment_polarity&quot;,&quot;_2&quot;:0.012771873141514529},{&quot;_1&quot;:&quot;abs_title_subjectivity&quot;,&quot;_2&quot;:0.0014809979007599989},{&quot;_1&quot;:&quot;abs_title_sentiment_polarity&quot;,&quot;_2&quot;:0.027135230985338283},{&quot;_1&quot;:&quot;shares&quot;,&quot;_2&quot;:1.0}],&quot;genId&quot;:&quot;1075753262&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/pieChart'], \n      function(playground, _magicpieChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicpieChart,\n    \"o\": {\"series\":\"_1\",\"p\":\"_2\",\"width\":600,\"height\":400}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon04bb9bbc2b8b28ece158464404785023&quot;,&quot;initialValue&quot;:&quot;60&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon106868f6e5b85a39a3aa127ea90be4b2&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div><div class=\"tab-pane\" id=\"tab264097444-3\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon55b1659eff53fd39fc08210b85a1d6f6&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;timedelta&quot;,&quot;_2&quot;:0.00866228771126269},{&quot;_1&quot;:&quot;n_tokens_title&quot;,&quot;_2&quot;:0.008783118841818711},{&quot;_1&quot;:&quot;n_tokens_content&quot;,&quot;_2&quot;:0.002458984345090766},{&quot;_1&quot;:&quot;n_unique_tokens&quot;,&quot;_2&quot;:0.0008063456613076702},{&quot;_1&quot;:&quot;n_non_stop_words&quot;,&quot;_2&quot;:0.00044294161730839177},{&quot;_1&quot;:&quot;n_non_stop_unique_tokens&quot;,&quot;_2&quot;:0.00011417193781092019},{&quot;_1&quot;:&quot;num_hrefs&quot;,&quot;_2&quot;:0.045404008405927905},{&quot;_1&quot;:&quot;num_self_hrefs&quot;,&quot;_2&quot;:-0.0019004033728370468},{&quot;_1&quot;:&quot;num_imgs&quot;,&quot;_2&quot;:0.03938759784762866},{&quot;_1&quot;:&quot;num_videos&quot;,&quot;_2&quot;:0.023936069530131016},{&quot;_1&quot;:&quot;average_token_length&quot;,&quot;_2&quot;:-0.022007298061938744},{&quot;_1&quot;:&quot;num_keywords&quot;,&quot;_2&quot;:0.02181822715187529},{&quot;_1&quot;:&quot;data_channel_is_lifestyle&quot;,&quot;_2&quot;:0.005831267306546861},{&quot;_1&quot;:&quot;data_channel_is_entertainment&quot;,&quot;_2&quot;:-0.017006198429558278},{&quot;_1&quot;:&quot;data_channel_is_bus&quot;,&quot;_2&quot;:-0.012376166187935972},{&quot;_1&quot;:&quot;data_channel_is_socmed&quot;,&quot;_2&quot;:0.005021216306495152},{&quot;_1&quot;:&quot;data_channel_is_tech&quot;,&quot;_2&quot;:-0.013252874428024518},{&quot;_1&quot;:&quot;data_channel_is_world&quot;,&quot;_2&quot;:-0.04949730893119859},{&quot;_1&quot;:&quot;kw_min_min&quot;,&quot;_2&quot;:-0.0010509877309307321},{&quot;_1&quot;:&quot;kw_max_min&quot;,&quot;_2&quot;:0.03011393667092828},{&quot;_1&quot;:&quot;kw_avg_min&quot;,&quot;_2&quot;:0.030405547415685658},{&quot;_1&quot;:&quot;kw_min_max&quot;,&quot;_2&quot;:0.0039014319770320376},{&quot;_1&quot;:&quot;kw_max_max&quot;,&quot;_2&quot;:0.007862569278241992},{&quot;_1&quot;:&quot;kw_avg_max&quot;,&quot;_2&quot;:0.044685844808570165},{&quot;_1&quot;:&quot;kw_min_avg&quot;,&quot;_2&quot;:0.03955069447964222},{&quot;_1&quot;:&quot;kw_max_avg&quot;,&quot;_2&quot;:0.06430586384745439},{&quot;_1&quot;:&quot;kw_avg_avg&quot;,&quot;_2&quot;:0.1104128627095444},{&quot;_1&quot;:&quot;self_reference_min_shares&quot;,&quot;_2&quot;:0.055957575110843955},{&quot;_1&quot;:&quot;self_reference_max_shares&quot;,&quot;_2&quot;:0.04711522330980049},{&quot;_1&quot;:&quot;self_reference_avg_sharess&quot;,&quot;_2&quot;:0.057788897391043766},{&quot;_1&quot;:&quot;weekday_is_monday&quot;,&quot;_2&quot;:0.009726435058827806},{&quot;_1&quot;:&quot;weekday_is_tuesday&quot;,&quot;_2&quot;:-0.007940651946220886},{&quot;_1&quot;:&quot;weekday_is_wednesday&quot;,&quot;_2&quot;:-0.003800671899536164},{&quot;_1&quot;:&quot;weekday_is_thursday&quot;,&quot;_2&quot;:-0.008833243677374527},{&quot;_1&quot;:&quot;weekday_is_friday&quot;,&quot;_2&quot;:-0.0038843499366703056},{&quot;_1&quot;:&quot;weekday_is_saturday&quot;,&quot;_2&quot;:0.015082249374438693},{&quot;_1&quot;:&quot;weekday_is_sunday&quot;,&quot;_2&quot;:0.008229538740752355},{&quot;_1&quot;:&quot;is_weekend&quot;,&quot;_2&quot;:0.016958185255365188},{&quot;_1&quot;:&quot;LDA_00&quot;,&quot;_2&quot;:-0.0037930631414760095},{&quot;_1&quot;:&quot;LDA_01&quot;,&quot;_2&quot;:-0.010182873758371945},{&quot;_1&quot;:&quot;LDA_02&quot;,&quot;_2&quot;:-0.05916272983775859},{&quot;_1&quot;:&quot;LDA_03&quot;,&quot;_2&quot;:0.08377149200458561},{&quot;_1&quot;:&quot;LDA_04&quot;,&quot;_2&quot;:-0.016621938194680233},{&quot;_1&quot;:&quot;global_subjectivity&quot;,&quot;_2&quot;:0.031604062199554396},{&quot;_1&quot;:&quot;global_sentiment_polarity&quot;,&quot;_2&quot;:0.004162929062277241},{&quot;_1&quot;:&quot;global_rate_positive_words&quot;,&quot;_2&quot;:0.0005432341490311217},{&quot;_1&quot;:&quot;global_rate_negative_words&quot;,&quot;_2&quot;:0.006615173122292261},{&quot;_1&quot;:&quot;rate_positive_words&quot;,&quot;_2&quot;:-0.013241304213399044},{&quot;_1&quot;:&quot;rate_negative_words&quot;,&quot;_2&quot;:-0.005183138309307638},{&quot;_1&quot;:&quot;avg_positive_polarity&quot;,&quot;_2&quot;:0.012142198867957546},{&quot;_1&quot;:&quot;min_positive_polarity&quot;,&quot;_2&quot;:-0.000040095261213634024},{&quot;_1&quot;:&quot;max_positive_polarity&quot;,&quot;_2&quot;:0.010067794396580248},{&quot;_1&quot;:&quot;avg_negative_polarity&quot;,&quot;_2&quot;:-0.03202890859561179},{&quot;_1&quot;:&quot;min_negative_polarity&quot;,&quot;_2&quot;:-0.01929737518477992},{&quot;_1&quot;:&quot;max_negative_polarity&quot;,&quot;_2&quot;:-0.019300211388182748},{&quot;_1&quot;:&quot;title_subjectivity&quot;,&quot;_2&quot;:0.021966682303943975},{&quot;_1&quot;:&quot;title_sentiment_polarity&quot;,&quot;_2&quot;:0.012771873141514529},{&quot;_1&quot;:&quot;abs_title_subjectivity&quot;,&quot;_2&quot;:0.0014809979007599989},{&quot;_1&quot;:&quot;abs_title_sentiment_polarity&quot;,&quot;_2&quot;:0.027135230985338283},{&quot;_1&quot;:&quot;shares&quot;,&quot;_2&quot;:1.0}],&quot;genId&quot;:&quot;1379489139&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/pivotChart'], \n      function(playground, _magicpivotChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicpivotChart,\n    \"o\": {\"width\":600,\"height\":400,\"derivedAttributes\":{},\"extraOptions\":{}}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anona1e7045af13c4925938c76ca92fe1f6b&quot;,&quot;initialValue&quot;:&quot;60&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anonae02fb3c70f2128b9e597ce7fe4cf28e&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div></div>\n      </div>\n    </div></div>"},"output_type":"execute_result","execution_count":68,"time":"Took: 3.879s, at 2019-04-07 17:33"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"presentation":{"tabs_state":"{\n  \"tab_id\": \"#tab1146577306-3\"\n}","pivot_chart_state":"{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"},"id":"7B7108C6A8FB452A9F962D80659818B5"},"cell_type":"code","source":"val labelField = \"shares\"\n\nval scalarFields: Seq[String] = newDf.schema.fields.collect\n  { case StructField(name, DoubleType, _, _) if name != labelField && name != \"url\" => name }\n\nval scalarData = newDf.map { row => (\n  Vectors.dense(scalarFields.map(name =>  row.getAs[Double](name)).toArray)\n  , row.getAs[Double](labelField)) }.toDF(\"features\", \"label\")\n\nscalarData.show","outputs":[{"name":"stdout","output_type":"stream","text":"+--------------------+-------+\n|            features|  label|\n+--------------------+-------+\n|[731.0,12.0,219.0...|  593.0|\n|[731.0,9.0,255.0,...|  711.0|\n|[731.0,9.0,211.0,...| 1500.0|\n|[731.0,9.0,531.0,...| 1200.0|\n|[731.0,13.0,1072....|  505.0|\n|[731.0,10.0,370.0...|  855.0|\n|[731.0,8.0,960.0,...|  556.0|\n|[731.0,12.0,989.0...|  891.0|\n|[731.0,11.0,97.0,...| 3600.0|\n|[731.0,10.0,231.0...|  710.0|\n|[731.0,9.0,1248.0...| 2200.0|\n|[731.0,10.0,187.0...| 1900.0|\n|[731.0,9.0,274.0,...|  823.0|\n|[731.0,9.0,285.0,...|10000.0|\n|[731.0,8.0,259.0,...|  761.0|\n|[731.0,12.0,682.0...| 1600.0|\n|[731.0,8.0,1118.0...|13600.0|\n|[731.0,8.0,397.0,...| 3100.0|\n|[731.0,11.0,103.0...| 5700.0|\n|[731.0,8.0,1207.0...|17100.0|\n+--------------------+-------+\nonly showing top 20 rows\n\nlabelField: String = shares\nscalarFields: Seq[String] = ArraySeq(timedelta, n_tokens_title, n_tokens_content, n_unique_tokens, n_non_stop_words, n_non_stop_unique_tokens, num_hrefs, num_self_hrefs, num_imgs, num_videos, average_token_length, num_keywords, data_channel_is_lifestyle, data_channel_is_entertainment, data_channel_is_bus, data_channel_is_socmed, data_channel_is_tech, data_channel_is_world, kw_min_min, kw_max_min, kw_avg_min, kw_min_max, kw_max_max, kw_avg_max, kw_min_avg, kw_max_avg, kw_avg_avg, self_reference_min_shares, self_reference_max_shares, self_reference_avg_sharess, weekday_is_monday, weekday_is_tuesday, weekday_is_wednesday, weekday_is_thursday, weekday_is_friday, weekday_is_saturday, weekday_is_sunday, is_weekend, LDA_00, LDA_01, LDA_02, LDA_03, LDA_04, global_sub..."},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":95,"time":"Took: 2.221s, at 2019-04-07 18:45"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"D512838C9A35462A8AA6E7877E851106"},"cell_type":"code","source":"// Transform Mean and Standard Deviation\nval scaler = new StandardScaler()\n  .setInputCol(\"features\")\n  .setOutputCol(\"features_scaled\")\n  .setWithStd(true)\n  .setWithMean(true)\n\n// Compute summary statistics by fitting the StandardScaler.\nval data_scaled = scaler.fit(scalarData).transform(scalarData)\ndata_scaled.show","outputs":[{"name":"stdout","output_type":"stream","text":"+--------------------+-------+--------------------+\n|            features|  label|     features_scaled|\n+--------------------+-------+--------------------+\n|[731.0,12.0,219.0...|  593.0|[1.75785817452466...|\n|[731.0,9.0,255.0,...|  711.0|[1.75785817452466...|\n|[731.0,9.0,211.0,...| 1500.0|[1.75785817452466...|\n|[731.0,9.0,531.0,...| 1200.0|[1.75785817452466...|\n|[731.0,13.0,1072....|  505.0|[1.75785817452466...|\n|[731.0,10.0,370.0...|  855.0|[1.75785817452466...|\n|[731.0,8.0,960.0,...|  556.0|[1.75785817452466...|\n|[731.0,12.0,989.0...|  891.0|[1.75785817452466...|\n|[731.0,11.0,97.0,...| 3600.0|[1.75785817452466...|\n|[731.0,10.0,231.0...|  710.0|[1.75785817452466...|\n|[731.0,9.0,1248.0...| 2200.0|[1.75785817452466...|\n|[731.0,10.0,187.0...| 1900.0|[1.75785817452466...|\n|[731.0,9.0,274.0,...|  823.0|[1.75785817452466...|\n|[731.0,9.0,285.0,...|10000.0|[1.75785817452466...|\n|[731.0,8.0,259.0,...|  761.0|[1.75785817452466...|\n|[731.0,12.0,682.0...| 1600.0|[1.75785817452466...|\n|[731.0,8.0,1118.0...|13600.0|[1.75785817452466...|\n|[731.0,8.0,397.0,...| 3100.0|[1.75785817452466...|\n|[731.0,11.0,103.0...| 5700.0|[1.75785817452466...|\n|[731.0,8.0,1207.0...|17100.0|[1.75785817452466...|\n+--------------------+-------+--------------------+\nonly showing top 20 rows\n\nscaler: org.apache.spark.ml.feature.StandardScaler = stdScal_fde935883180\ndata_scaled: org.apache.spark.sql.DataFrame = [features: vector, label: double ... 1 more field]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":96,"time":"Took: 2.681s, at 2019-04-07 18:45"}]},{"metadata":{"id":"0DAE9AD8621A493F85CFBCEB2A707A84"},"cell_type":"markdown","source":"# Feature Selectors\n\n"},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"E1273688E03D403B81D94ACA62945839"},"cell_type":"code","source":"val dataReady = data_scaled.select(\"features_scaled\", \"label\").toDF(\"features\", \"label\")\ndataReady.show","outputs":[{"name":"stdout","output_type":"stream","text":"+--------------------+-------+\n|            features|  label|\n+--------------------+-------+\n|[1.75785817452466...|  593.0|\n|[1.75785817452466...|  711.0|\n|[1.75785817452466...| 1500.0|\n|[1.75785817452466...| 1200.0|\n|[1.75785817452466...|  505.0|\n|[1.75785817452466...|  855.0|\n|[1.75785817452466...|  556.0|\n|[1.75785817452466...|  891.0|\n|[1.75785817452466...| 3600.0|\n|[1.75785817452466...|  710.0|\n|[1.75785817452466...| 2200.0|\n|[1.75785817452466...| 1900.0|\n|[1.75785817452466...|  823.0|\n|[1.75785817452466...|10000.0|\n|[1.75785817452466...|  761.0|\n|[1.75785817452466...| 1600.0|\n|[1.75785817452466...|13600.0|\n|[1.75785817452466...| 3100.0|\n|[1.75785817452466...| 5700.0|\n|[1.75785817452466...|17100.0|\n+--------------------+-------+\nonly showing top 20 rows\n\ndataReady: org.apache.spark.sql.DataFrame = [features: vector, label: double]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":109,"time":"Took: 1.970s, at 2019-04-07 18:52"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"3C769791431940978263BD18BE286E2B"},"cell_type":"code","source":"val Array(trainData, testData) = dataReady.randomSplit(Array(0.7, 0.3))\n\ndef evaluate(ds: DataFrame, model: Transformer): (DataFrame, Double) = {\n  val evaluator = new RegressionEvaluator()\n   .setLabelCol(\"label\")\n   .setPredictionCol(\"prediction\")\n   .setMetricName(\"r2\")\n  val predictions = model.transform(ds)\n  val r2 = evaluator.evaluate(predictions)\n  (predictions, r2)\n}\n// ","outputs":[{"name":"stdout","output_type":"stream","text":"trainData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, label: double]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, label: double]\nevaluate: (ds: org.apache.spark.sql.DataFrame, model: org.apache.spark.ml.Transformer)(org.apache.spark.sql.DataFrame, Double)\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":110,"time":"Took: 1.294s, at 2019-04-07 18:52"}]},{"metadata":{"id":"A817C878E2704E3BB82F2E2589C1EB2E"},"cell_type":"markdown","source":"# Linear Regression"},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"39C3FA361EF0411482D900233EC68608"},"cell_type":"code","source":"val lr = new LinearRegression()\n  .setMaxIter(1000)\n  .setRegParam(0.3)\n\n//Fit the model \nval lrModel = lr.fit(trainData)\n\n//Evaluation \nval (trainLrPredictions, trainLrR2) = evaluate(trainData, lrModel)\nval (testLrPredictions, testLrR2) = evaluate(testData, lrModel)\n\n// Output \n\nprintln(s\"r2 on train data: $trainLrR2\")\nprintln(s\"r2 on test data: $testLrR2\")\n\ntestLrPredictions.select($\"prediction\", $\"label\").show(10)","outputs":[{"name":"stdout","output_type":"stream","text":"r2 on train data: 0.02264950199234128\nr2 on test data: -2.451056227202385\n+------------------+------+\n|        prediction| label|\n+------------------+------+\n| 3315.780262547378| 697.0|\n| 4520.799641050545|2300.0|\n|  722.207617242399| 507.0|\n|2705.5443875748383|1600.0|\n|2682.1157775807906| 971.0|\n|3015.5963865758995|1100.0|\n| 3491.315990351546|5900.0|\n| 2937.382787668372|1100.0|\n|3095.5671044214378|3500.0|\n|3324.9595164293514| 979.0|\n+------------------+------+\nonly showing top 10 rows\n\nlr: org.apache.spark.ml.regression.LinearRegression = linReg_831808d2557a\nlrModel: org.apache.spark.ml.regression.LinearRegressionModel = linReg_831808d2557a\ntrainLrPredictions: org.apache.spark.sql.DataFrame = [features: vector, label: double ... 1 more field]\ntrainLrR2: Double = 0.02264950199234128\ntestLrPredictions: org.apache.spark.sql.DataFrame = [features: vector, label: double ... 1 more field]\ntestLrR2: Double = -2.451056227202385\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":111,"time":"Took: 6.950s, at 2019-04-07 18:52"}]},{"metadata":{"id":"6C31A2DBF524405BBBAB529E13EE3FE9"},"cell_type":"markdown","source":"# Regression Tree"},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"A4A3434ED7144FD58B04343C62BD3E25"},"cell_type":"code","source":"val dt = new DecisionTreeRegressor()\n  .setLabelCol(\"label\")\n  .setFeaturesCol(\"features\")\n  .setMaxBins(1000)\n  .setMaxDepth(10)\n\n// Fit the model\nval dtModel = dt.fit(trainData)\n\n//Evaluation \nval (trainDtPredictions, trainDtR2) = evaluate(trainData, dtModel)\nval (testDtPredictions, testDtR2) = evaluate(testData, dtModel)\n\n// Output \n\nprintln(s\"r2 on train data: $trainDtR2\")\nprintln(s\"r2 on test data: $testDtR2\")\n\ntestLrPredictions.select($\"prediction\", $\"label\").show(10)","outputs":[{"name":"stdout","output_type":"stream","text":"r2 on train data: 0.7726339225116858\nr2 on test data: -1.8197043087291123\n+------------------+------+\n|        prediction| label|\n+------------------+------+\n| 3315.780262547378| 697.0|\n| 4520.799641050545|2300.0|\n|  722.207617242399| 507.0|\n|2705.5443875748383|1600.0|\n|2682.1157775807906| 971.0|\n|3015.5963865758995|1100.0|\n| 3491.315990351546|5900.0|\n| 2937.382787668372|1100.0|\n|3095.5671044214378|3500.0|\n|3324.9595164293514| 979.0|\n+------------------+------+\nonly showing top 10 rows\n\ndt: org.apache.spark.ml.regression.DecisionTreeRegressor = dtr_69c090b37523\ndtModel: org.apache.spark.ml.regression.DecisionTreeRegressionModel = DecisionTreeRegressionModel (uid=dtr_69c090b37523) of depth 10 with 605 nodes\ntrainDtPredictions: org.apache.spark.sql.DataFrame = [features: vector, label: double ... 1 more field]\ntrainDtR2: Double = 0.7726339225116858\ntestDtPredictions: org.apache.spark.sql.DataFrame = [features: vector, label: double ... 1 more field]\ntestDtR2: Double = -1.8197043087291123\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":112,"time":"Took: 10.156s, at 2019-04-07 18:54"}]},{"metadata":{"id":"9ABF6A42519D4C259E7063D580624ACF"},"cell_type":"markdown","source":"## Random Forest"},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"69AE96C1C4CB4870BD80D812B9AA000D"},"cell_type":"code","source":"// Train a RandomForest model.\nval rf = new RandomForestRegressor()\n  .setLabelCol(\"label\")\n  .setFeaturesCol(\"features\")\n\n// Chain indexer and forest in a Pipeline.\nval pipeline = new Pipeline()\n  .setStages(Array(rf))\n\n// Train model. This also runs the indexer.\nval RFmodel = pipeline.fit(trainData)\n\n// Make predictions.\nval predictions = RFmodel.transform(testData)\n\n// Select example rows to display.\npredictions.select(\"prediction\", \"label\", \"features\").show(5)\n\n// Select (prediction, true label) and compute test error.\nval evaluator = new RegressionEvaluator()\n  .setLabelCol(\"label\")\n  .setPredictionCol(\"prediction\")\n  .setMetricName(\"rmse\")\nval rmse = evaluator.evaluate(predictions)","outputs":[{"name":"stdout","output_type":"stream","text":"+------------------+------+--------------------+\n|        prediction| label|            features|\n+------------------+------+--------------------+\n|2588.6420710475077| 697.0|[1.16018471326857...|\n|3647.1805364551715|2300.0|[1.16485403718463...|\n|1890.6060952973087| 507.0|[1.16485403718463...|\n|2809.7299524352306|1600.0|[1.16485403718463...|\n| 2289.677893577099| 971.0|[1.16485403718463...|\n+------------------+------+--------------------+\nonly showing top 5 rows\n\nrf: org.apache.spark.ml.regression.RandomForestRegressor = rfr_0a275ae2a4df\npipeline: org.apache.spark.ml.Pipeline = pipeline_84a60d9bb560\nRFmodel: org.apache.spark.ml.PipelineModel = pipeline_84a60d9bb560\npredictions: org.apache.spark.sql.DataFrame = [features: vector, label: double ... 1 more field]\nevaluator: org.apache.spark.ml.evaluation.RegressionEvaluator = regEval_e1c44a240368\nrmse: Double = 11076.015895101025\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":115,"time":"Took: 7.246s, at 2019-04-07 18:57"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"583CD40539C14848ACF9CCEF2E065B9B"},"cell_type":"code","source":"println(s\"Root Mean Squared Error (RMSE) on test data = $rmse\")","outputs":[{"name":"stdout","output_type":"stream","text":"Root Mean Squared Error (RMSE) on test data = 11076.015895101025\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":116,"time":"Took: 1.852s, at 2019-04-07 18:58"}]}],"nbformat":4}